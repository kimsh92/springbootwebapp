box:
  id: ap-seoul-1.ocir.io/cnmcstwdpgew/openjdk:11-jdk
  ports:
    - 8080


#Build our application using Maven, just as we always have
build:
  steps:
    - install-packages:
        packages: maven
    # Build Spring Boot application
    - script:
        name: Maven build
        code: mvn package -Dmaven.test.skip

    - internal/docker-push:
        entrypoint: java -jar /pipeline/source/target/spring-boot-web-1.0.jar
        tag: latest
        ports: "8080"
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        repository: $DOCKER_REPO
        registry: https://ap-seoul-1.ocir.io/v2

deploy-apps:
    steps:
    - bash-template
    # Rollout Application
    - kubectl:
        name: rollout deployment
        server: $OKE_MASTER
        token: $OKE_TOKEN
        insecure-skip-tls-verify: true
        command: -n thkoke-apps rollout restart deployment/thkoke-apps

scale-apps:
    steps:
    - bash-template
    # Rollout Application
    - kubectl:
        name: rollout deployment
        server: $OKE_MASTER
        token: $OKE_TOKEN
        insecure-skip-tls-verify: true
        command: -n thkoke-apps scale --replicas=3 deployment/thkoke-apps

status-apps:
    steps:
    - bash-template
    # Status Application
    - kubectl:
        name: check deployment status
        server: $OKE_MASTER
        token: $OKE_TOKEN
        insecure-skip-tls-verify: true
        command: -n thkoke-apps rollout status deployment/thkoke-apps

